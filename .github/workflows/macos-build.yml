name: MacOS build

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/linux-build.yml'
      - '.github/workflows/msys2-build.yml'
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest]
        arch: [x86_64]
        confs:
        - { mode: debug, archive: yes }
        - { mode: debug, config: --asan=y, archive: false, cache_key: -asan }
        - { mode: debug, config: --tsan=y, archive: false }
        - { mode: releasedbg, archive: yes }

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
    - name: Get current date as package key
      id: cache_key
      run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Force xmake to a specific folder
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev
        actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}
    
    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update
    
    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo " hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT
    
    # Cache xmake dependencies
    - name: Restore cached xmake dependencies
      id: restore_depcache
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: macOS-${{ matrix.arch }}-${{ matrix.confs.mode }}${{ matrix.confs.cache_key }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}
    
    # Setup compilation mode and install dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --arch=${{ matrix.arch }} --mode=${{ matrix.confs.mode }} ${{ matrix.confs.config }} --ccache=n --yes

    # Save dependencies
    - name: Save cached xmake dependencies
      if: ${{ !steps.restore_depcache.outputs.cache-hit }}
      uses: actions/cache/save@v4
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: ${{ steps.restore_depcache.outputs.cache-primary-key }}
    
    # Build the project
    - name: Build BasalteLang
      run: xmake --yes